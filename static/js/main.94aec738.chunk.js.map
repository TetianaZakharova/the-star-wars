{"version":3,"sources":["api/api.ts","Components/BreadCrumbs/BreadCrumbs.tsx","Components/FilmPage/FilmPage.tsx","Components/HomePage/HomePage.tsx","Components/NotFoundPage.tsx","Components/FilmDetails/FilmDetails.tsx","App.tsx","index.tsx"],"names":["BASE_URL","getFilms","a","fetch","then","response","json","getPlanets","getStarships","BreadCrumbs","stage","useLocation","pathname","toUpperCase","split","className","to","activeClassName","src","alt","map","step","index","breadCrumbsLine","slice","join","length","FilmPage","films","useState","movies","setMovies","filterQuery","setFilterQuery","searchQuery","setSearchQuery","sortName","setSortName","location","searchParams","URLSearchParams","search","query","get","visibleFilms","useMemo","filter","film","title","toLowerCase","includes","setFilterQueryWithDebounce","useCallback","debounce","useEffect","type","id","placeholder","value","onChange","event","target","set","onClick","sortedMovies","sort","b","localeCompare","item","key","episode_id","director","release_date","HomePage","NotFoundPage","FilmDetails","starships","planets","planetsInFilm","setPlanetsInFilm","starshipsInFilm","setStarshipsInFilm","planetsList","starshipsList","forEach","planet","find","url","push","starship","opening_crawl","producer","name","App","setFilms","setPlanets","setStarships","data","results","exact","path","render","from","component","Root","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.94aec738.chunk.js","sourcesContent":["const BASE_URL = 'https://swapi.dev/api/';\r\n\r\nexport const getFilms = async() => {\r\n    return await fetch(`${BASE_URL}films/`)\r\n    .then(response => response.json());\r\n}\r\n\r\nexport const getPlanets = async() => {\r\n    return await fetch(`${BASE_URL}planets/`)\r\n    .then(response => response.json());\r\n}\r\n\r\nexport const getStarships = async() => {\r\n    return await fetch(`${BASE_URL}starships/`)\r\n    .then(response => response.json());\r\n}","import React from 'react';\n\nimport { useLocation, NavLink } from 'react-router-dom';\nimport './BreadCrumbs.scss';\n\nexport const BreadCrumbs = () => {\n  const location = useLocation();\n  const stage = location.pathname.toUpperCase().split('/');\n\n  return (\n    <div className=\"breadcrumbs\">\n      <NavLink\n        to=\"/\"\n        className=\"breadcrumbs__item\"\n        activeClassName=\"breadcrumbs__item--active\"\n      >\n        <img src=\"img/Icons/Home.png\" alt=\"home icon\" className=\"breadcrumbs__icon--home\" />\n      </NavLink>\n\n      {stage.map((step, index) => {\n        const breadCrumbsLine = stage.slice(0, index + 1).join('/');\n\n        return (\n          <>\n            {index === stage.length - 1\n              ? <span className=\"breadcrumbs__step\">{step}</span>\n              : (\n                <NavLink\n                  className=\"breadcrumbs__step\"\n                  to={breadCrumbsLine}\n                >\n                  {step}\n                </NavLink>\n              )}\n            { index !== stage.length - 1\n              ? (<img src=\"img/Icons/crumbs_arrow.svg\" alt=\"home icon\" className=\"breadcrumbs__icon\" />)\n              : '' }\n          </>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useState, useMemo, useCallback, useEffect } from 'react';\r\nimport debounce from 'lodash/debounce'; \r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport { BreadCrumbs } from '../BreadCrumbs/BreadCrumbs';\r\nimport './FilmPage.scss';\r\n\r\ntype Props = {\r\n  films: FilmItem[];\r\n};\r\n\r\nexport const FilmPage: React.FC<Props> = ({ films }) => {\r\n  const [movies, setMovies] = useState(films);\r\n  const [filterQuery, setFilterQuery] = useState<string>('');\r\n  const [searchQuery, setSearchQuery] = useState<string>('');\r\n  const [sortName, setSortName] = useState(false);\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const query: string = searchParams.get('query') || '';\r\n\r\n  const visibleFilms = useMemo(() => {\r\n    const getVisibleMovies = films.filter(film => {\r\n    const title = film.title.toLowerCase();\r\n\r\n      return title.includes(filterQuery.toLowerCase());\r\n    });\r\n\r\n    return getVisibleMovies;\r\n  }, [films, filterQuery]);\r\n\r\n  useMemo(() => setMovies(visibleFilms),\r\n  [visibleFilms]);\r\n\r\nconst setFilterQueryWithDebounce = useCallback(\r\n  debounce(setFilterQuery, 1000), [],\r\n);\r\n\r\n  const handleSearchFilm = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(event.target.value);\r\n    searchParams.set('query', event.target.value);\r\n    setFilterQueryWithDebounce(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSearchQuery(query);\r\n  }, [query]);\r\n\r\n  const handleSortByName = () => {\r\n    if (!sortName) {\r\n      setSortName(true);\r\n      const sortedMovies = [...movies].sort((a, b) => a.title.localeCompare(b.title));\r\n      setMovies(sortedMovies)\r\n    } else {\r\n      setSortName(false);\r\n      const sortedMovies = [...movies].sort((a, b) => b.title.localeCompare(a.title));\r\n      setMovies(sortedMovies)\r\n    }\r\n  };\r\n\r\nreturn (\r\n<>\r\n<div className=\"container filmPage\">\r\n  <BreadCrumbs />\r\n  <div className=\"filmPage__control\">\r\n    <input\r\n      type=\"text\"\r\n      id=\"search-query\"\r\n      className=\"form__control\"\r\n      placeholder={`Search in ${location.pathname.slice(1)}...`}\r\n      value={searchQuery}\r\n      onChange={handleSearchFilm}\r\n    />\r\n  </div>\r\n  <button\r\n    className=\"filmPage__sortButton\"\r\n    onClick={handleSortByName}\r\n  >\r\n    Sort by name\r\n  </button>\r\n  <ul className=\"films__list list\">\r\n    {movies.map(item => (\r\n              <NavLink\r\n              to={`/films/${item.title}`}\r\n              className=\"list__link\"\r\n            >\r\n      <li\r\n      className=\"list__item item\"\r\n        key=\"item.title\"\r\n      >\r\n          <h2 className=\"item__title\">\r\n            {item.title}\r\n          </h2>   \r\n          <p className=\"item__episode\">\r\n            Episode {item.episode_id}\r\n          </p>\r\n          <span className=\"item__info\">\r\n            Director: {item.director}\r\n            <br/>\r\n            Release Date: {item.release_date}\r\n          </span>\r\n\r\n\r\n      </li>\r\n      </NavLink>\r\n    ))}\r\n  </ul>\r\n</div>\r\n\r\n</>\r\n)\r\n}","import React from 'react';\r\nimport './HomePage.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HomePage: React.FC = () => {\r\n\r\n  return (\r\n    <div className=\"homePage container\">\r\n      <div className=\"homePage__loadFilmsButton\">\r\n        <Link\r\n         className=\"homePage__link\"\r\n          to=\"/films\"\r\n        >\r\n          FORCE\r\n        </Link>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\n\nexport const NotFoundPage = () => (\n  <h1>Page not found</h1>\n);\n","import React, { useState, useEffect } from 'react';\r\nimport './FilmDetails.scss'\r\nimport { BreadCrumbs } from '../BreadCrumbs/BreadCrumbs';\r\n\r\n\r\ntype Props = {\r\n  film : FilmItem;\r\n  planets: Planet[];\r\n  starships: Starship[];\r\n}\r\n\r\nexport const FilmDetails: React.FC<Props> = ({ film, starships, planets }) => {\r\n  const [planetsInFilm, setPlanetsInFilm] = useState<Planet[]>([]);\r\n  const [starshipsInFilm, setStarshipsInFilm] = useState<Starship[]>([]);\r\n\r\n  const planetsList: Array<Planet> = [];\r\n  const starshipsList: Array<Starship> = [];\r\n\r\n  useEffect(() => {\r\n    film.planets.forEach(item => {\r\n      const planet = planets.find(planet => planet.url === item);\r\n      \r\n      if (planet) {\r\n        planetsList.push(planet);\r\n      }\r\n    })\r\n\r\n    film.starships.forEach(item => {\r\n      const starship = starships.find(starship => starship.url === item);\r\n      \r\n      if (starship) {\r\n        starshipsList.push(starship);\r\n      }\r\n    })\r\n\r\n    setPlanetsInFilm(planetsList);\r\n    setStarshipsInFilm(starshipsList);\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n    <BreadCrumbs />\r\n      <div className=\"film__details details container\">\r\n          <h2 className=\"item__title\">\r\n            {film.title}\r\n          </h2>\r\n        <p className=\"item__episode\">\r\n          Episode {film.episode_id}\r\n        </p>\r\n          <span className=\"item__info\">\r\n            <span className=\"item__info--description\">\r\n             {film.opening_crawl}\r\n            </span>\r\n            <br/>\r\n            <br/>\r\n            Director: {film.director}\r\n             <br/>\r\n            Producer: {film.producer}\r\n            <br/>\r\n            Release Date: {film.release_date}\r\n          </span>\r\n\r\n        <div className=\"details__info\">\r\n          <div className=\"info__list\">\r\n            <h3 className=\"details__title\">Planets:</h3>\r\n            <ul className=\"details__list list\">\r\n              {planetsInFilm.map(planet => (\r\n                <li className=\"details__item details__item--planet item\" key={planet.url}>\r\n                  {planet.name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n          </div>\r\n          <div className=\"info__list\">\r\n            <h3 className=\"details__title\">Starships:</h3>\r\n            <ul className=\"details__list list\">\r\n              {starshipsInFilm.map(starship => (\r\n                <li className=\"details__item details__item--starship item\" key={starship.url}>\r\n                  {starship.name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport { getFilms, getPlanets, getStarships } from './api/api';\nimport './App.scss';\nimport { FilmPage } from './Components/FilmPage/FilmPage';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport HomePage from './Components/HomePage/HomePage';\nimport { NotFoundPage } from './Components/NotFoundPage';\nimport { FilmDetails } from './Components/FilmDetails/FilmDetails';\n\nexport const App: React.FC = () => {\n\n  const [films, setFilms] = useState<FilmItem[]>([]);\n  const [planets, setPlanets] = useState<Planet[]>([]);\n  const [starships, setStarships] = useState<Starship[]>([]);\n\n  useEffect(() => {\n    getFilms()\n      .then(data => {\n        setFilms(data.results);\n      })\n\n    getPlanets()\n      .then(data => {\n        setPlanets(data.results);\n      })\n  \n      getStarships()\n      .then(data => {\n        setStarships(data.results);\n      })\n  }, []);\n\n// useEffect(() => {\n//   getPlanets()\n//     .then(data => {\n//       setPlanets(data.results);\n//     })\n\n//     getStarships()\n//     .then(data => {\n//       setStarships(data.results);\n//     })\n// }, []);\n\n  return (\n  <>\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        render={() => (\n          <HomePage />\n        )}\n      />\n      <Route\n        exact\n        path=\"/films\"\n        render={() => (\n          <FilmPage films={films} />\n        )}\n      />\n      {films.map(film  => (\n        <Route\n          path={`/films/${film.title}`}\n          render={() => (\n            <FilmDetails film={film} planets={planets} starships={starships} />\n          )}\n        />\n      ))}\n      <Redirect from=\"/home\" to=\"/\" />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </>\n  )\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.css';\nimport { App } from './App';\n\nconst Root = () => (\n  <HashRouter>\n    <App />\n  </HashRouter>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n"],"sourceRoot":""}